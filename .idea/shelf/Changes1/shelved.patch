Index: src/main/java/de/hitec/nhplus/utils/SetUpDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.hitec.nhplus.utils;\n\nimport de.hitec.nhplus.datastorage.ConnectionBuilder;\nimport de.hitec.nhplus.datastorage.DaoFactory;\nimport de.hitec.nhplus.datastorage.PatientDao;\nimport de.hitec.nhplus.datastorage.TreatmentDao;\nimport de.hitec.nhplus.model.Patient;\nimport de.hitec.nhplus.model.Treatment;\nimport org.mindrot.jbcrypt.BCrypt;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.time.LocalDate;\n\nimport static de.hitec.nhplus.utils.DateConverter.convertStringToLocalDate;\nimport static de.hitec.nhplus.utils.DateConverter.convertStringToLocalTime;\n\n/**\n * Call static class provides to static methods to set up and wipe the database. It uses the class ConnectionBuilder\n * and its path to build up the connection to the database. The class is executable. Executing the class will build\n * up a connection to the database and calls setUpDb() to wipe the database, build up a clean database and fill the\n * database with some test data.\n */\npublic class SetUpDB {\n\n    /**\n     * This method wipes the database by dropping the tables. Then the method calls DDL statements to build it up from\n     * scratch and DML statements to fill the database with hard coded test data.\n     */\n    public static void setUpDb() {\n        Connection connection = ConnectionBuilder.getConnection();\n        SetUpDB.wipeDb(connection);\n        SetUpDB.setUpTableCaregiver(connection);\n        SetUpDB.setUpTablePatient(connection);\n        SetUpDB.setUpTableTreatment(connection);\n        SetUpDB.setUpTableUser(connection);\n        SetUpDB.setUpPatients();\n        SetUpDB.setUpTreatments();\n        SetUpDB.setUpTestUsers(connection);\n        SetUpDB.setUpCaregivers();\n    }\n\n    /**\n     * This method wipes the database by dropping the tables.\n     */\n    public static void wipeDb(Connection connection) {\n        try (Statement statement = connection.createStatement()) {\n            statement.execute(\"DROP TABLE IF EXISTS treatment\");\n            statement.execute(\"DROP TABLE IF EXISTS patient\");\n            statement.execute(\"DROP TABLE IF EXISTS caregiver\");\n            statement.execute(\"DROP TABLE IF EXISTS user\");\n        } catch (SQLException exception) {\n            System.out.println(exception.getMessage());\n        }\n    }\n\n    /**\n     * Creates the table for caregivers with necessary fields.\n     *\n     * @param connection Database connection.\n     */\n    private static void setUpTableCaregiver(Connection connection) {\n        final String SQL = \"CREATE TABLE IF NOT EXISTS caregiver (\" +\n                \"   cid INTEGER PRIMARY KEY AUTOINCREMENT, \" +\n                \"   firstname TEXT NOT NULL, \" +\n                \"   surname TEXT NOT NULL, \" +\n                \"   phonenumber TEXT NOT NULL,\" +\n                \"inactiveSince TEXT\" +\n                \");\";\n        try (Statement statement = connection.createStatement()) {\n            statement.execute(SQL);\n        } catch (SQLException exception) {\n            System.out.println(exception.getMessage());\n        }\n    }\n\n    /**\n     * Creates the table for patients with necessary fields.\n     *\n     * @param connection Database connection.\n     */\n\n    private static void setUpTablePatient(Connection connection) {\n        final String SQL = \"CREATE TABLE IF NOT EXISTS patient (\" +\n                \"   pid INTEGER PRIMARY KEY AUTOINCREMENT, \" +\n                \"   firstname TEXT NOT NULL, \" +\n                \"   surname TEXT NOT NULL, \" +\n                \"   dateOfBirth TEXT NOT NULL, \" +\n                \"   carelevel TEXT NOT NULL, \" +\n                \"   roomnumber TEXT NOT NULL \" +\n                \");\";\n        try (Statement statement = connection.createStatement()) {\n            statement.execute(SQL);\n        } catch (SQLException exception) {\n            System.out.println(exception.getMessage());\n        }\n    }\n\n    /**\n     * Creates the table for treatments with necessary fields and foreign key to patient.\n     *\n     * @param connection Database connection.\n     */\n    private static void setUpTableTreatment(Connection connection) {\n        final String SQL = \"CREATE TABLE IF NOT EXISTS treatment (\" +\n                \"   tid INTEGER PRIMARY KEY AUTOINCREMENT, \" +\n                \"   pid INTEGER NOT NULL, \" +\n                \"   treatment_date TEXT NOT NULL, \" +\n                \"   begin TEXT NOT NULL, \" +\n                \"   end TEXT NOT NULL, \" +\n                \"   description TEXT NOT NULL, \" +\n                \"   remark TEXT NOT NULL,\" +\n                \"   cid INTEGER NOT NULL,\"+\n                \"   FOREIGN KEY (pid) REFERENCES patient (pid) ON DELETE CASCADE \" +\n                \");\";\n\n        try (Statement statement = connection.createStatement()) {\n            statement.execute(SQL);\n        } catch (SQLException exception) {\n            System.out.println(exception.getMessage());\n        }\n    }\n\n    /**\n     * Creates the table for users with username and encrypted password.\n     *\n     * @param connection Database connection.\n     */\n    private static void setUpTableUser(Connection connection) {\n        final String SQL = \"CREATE TABLE IF NOT EXISTS user (\" +\n                \"id INTEGER PRIMARY KEY AUTOINCREMENT, \" +\n                \"username TEXT NOT NULL UNIQUE, \" +\n                \"password TEXT NOT NULL\" +\n                \");\";\n        try (Statement statement = connection.createStatement()) {\n            statement.execute(SQL);\n        } catch (SQLException exception) {\n            System.out.println(exception.getMessage());\n        }\n    }\n\n\n    /**\n     * Inserts predefined patient records into the patient table.\n     */\n    private static void setUpPatients() {\n        try {\n            PatientDao dao = DaoFactory.getDaoFactory().createPatientDAO();\n            dao.create(new Patient(\"Seppl\", \"Herberger\", convertStringToLocalDate(\"1945-12-01\"), \"4\", \"202\"));\n            dao.create(new Patient(\"Martina\", \"Gerdsen\", convertStringToLocalDate(\"1954-08-12\"), \"5\", \"010\"));\n            dao.create(new Patient(\"Gertrud\", \"Franzen\", convertStringToLocalDate(\"1949-04-16\"), \"3\", \"002\"));\n            dao.create(new Patient(\"Ahmet\", \"Yilmaz\", convertStringToLocalDate(\"1941-02-22\"), \"3\", \"013\"));\n            dao.create(new Patient(\"Hans\", \"Neumann\", convertStringToLocalDate(\"1955-12-12\"), \"2\", \"001\"));\n            dao.create(new Patient(\"Elisabeth\", \"Müller\", convertStringToLocalDate(\"1958-03-07\"), \"5\", \"110\"));\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    /**\n     * Inserts predefined treatment records into the treatment table.\n     */\n    private static void setUpTreatments() {\n        try {\n            TreatmentDao dao = DaoFactory.getDaoFactory().createTreatmentDao();\n            dao.create(new Treatment(1, 1, convertStringToLocalDate(\"2023-06-03\"), convertStringToLocalTime(\"11:00\"), convertStringToLocalTime(\"15:00\"), \"Gespräch\", \"Der Patient hat enorme Angstgefühle und glaubt, er sei überfallen worden. Ihm seien alle Wertsachen gestohlen worden.\\nPatient beruhigt sich erst, als alle Wertsachen im Zimmer gefunden worden sind.\", 2));\n            dao.create(new Treatment(2, 1, convertStringToLocalDate(\"2023-06-05\"), convertStringToLocalTime(\"11:00\"), convertStringToLocalTime(\"12:30\"), \"Gespräch\", \"Patient irrt auf der Suche nach gestohlenen Wertsachen durch die Etage und bezichtigt andere Bewohner des Diebstahls.\\nPatient wird in seinen Raum zurückbegleitet und erhält Beruhigungsmittel.\", 1));\n            dao.create(new Treatment(3, 2, convertStringToLocalDate(\"2023-06-04\"), convertStringToLocalTime(\"07:30\"), convertStringToLocalTime(\"08:00\"), \"Waschen\", \"Patient mit Waschlappen gewaschen und frisch angezogen. Patient gewendet.\", 1));\n            dao.create(new Treatment(4, 1, convertStringToLocalDate(\"2023-06-06\"), convertStringToLocalTime(\"15:10\"), convertStringToLocalTime(\"16:00\"), \"Spaziergang\", \"Spaziergang im Park, Patient döst  im Rollstuhl ein\",2));\n            dao.create(new Treatment(8, 1, convertStringToLocalDate(\"2023-06-08\"), convertStringToLocalTime(\"15:00\"), convertStringToLocalTime(\"16:00\"), \"Spaziergang\", \"Parkspaziergang; Patient ist heute lebhafter und hat klare Momente; erzählt von seiner Tochter\",1));\n            dao.create(new Treatment(9, 2, convertStringToLocalDate(\"2023-06-07\"), convertStringToLocalTime(\"11:00\"), convertStringToLocalTime(\"11:30\"), \"Waschen\", \"Waschen per Dusche auf einem Stuhl; Patientin gewendet;\", 3));\n            dao.create(new Treatment(12, 5, convertStringToLocalDate(\"2023-06-08\"), convertStringToLocalTime(\"15:00\"), convertStringToLocalTime(\"15:30\"), \"Physiotherapie\", \"Übungen zur Stabilisation und Mobilisierung der Rückenmuskulatur\", 1));\n            dao.create(new Treatment(14, 4, convertStringToLocalDate(\"2023-08-24\"), convertStringToLocalTime(\"09:30\"), convertStringToLocalTime(\"10:15\"), \"KG\", \"Lympfdrainage\",2));\n            dao.create(new Treatment(16, 6, convertStringToLocalDate(\"2023-08-31\"), convertStringToLocalTime(\"13:30\"), convertStringToLocalTime(\"13:45\"), \"Toilettengang\", \"Hilfe beim Toilettengang; Patientin klagt über Schmerzen beim Stuhlgang. Gabe von Iberogast\",2));\n            dao.create(new Treatment(17, 6, convertStringToLocalDate(\"2023-09-01\"), convertStringToLocalTime(\"16:00\"), convertStringToLocalTime(\"17:00\"), \"KG\", \"Massage der Extremitäten zur Verbesserung der Durchblutung\",3));\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    private static void setUpCaregivers(){\n        try {\n            CaregiverDao dao = DaoFactory.getDaoFactory().createCaregiverDAO();\n            dao.create(new Caregiver(\"Tim\", \"Müller\", \"1257123124\", LocalDate.now()));\n            dao.create(new Caregiver(\"Flora\", \"Fischer\", \"125626776543\", LocalDate.now()));\n            dao.create(new Caregiver(\"Jonas\", \"Meier\", \"017612345678\", null));\n            dao.create(new Caregiver(\"Elena\", \"Schmidt\", \"015778899001\", null));\n            dao.create(new Caregiver(\"Tobias\", \"Klein\", \"016012398765\", null));\n            dao.create(new Caregiver(\"Lena\", \"Weber\", \"017698745612\", null));\n            dao.create(new Caregiver(\"Marc\", \"Zimmermann\", \"015112233445\", null));\n        } catch (SQLException exception){\n            exception.printStackTrace();\n        }\n    }\n\n    /**\n     * Inserts test user credentials with encrypted password into the user table.\n     *\n     * @param connection Database connection.\n     */\n    private static void setUpTestUsers(Connection connection) {\n        final String SQL = \"INSERT INTO user (username, password) VALUES (?, ?)\";\n        try (PreparedStatement stmt = connection.prepareStatement(SQL)) {\n            stmt.setString(1, \"admin\");\n            String hashedPassword = BCrypt.hashpw(\"admin123\", BCrypt.gensalt());\n            stmt.setString(2, hashedPassword);\n            stmt.executeUpdate();\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    /**\n     * Executes the setup of the database when the class is run.\n     */\n    public static void main(String[] args) {\n        SetUpDB.setUpDb();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/hitec/nhplus/utils/SetUpDB.java b/src/main/java/de/hitec/nhplus/utils/SetUpDB.java
--- a/src/main/java/de/hitec/nhplus/utils/SetUpDB.java	(revision 3f7a8cb9677a662b8ceec3c94abfada588aa9fb9)
+++ b/src/main/java/de/hitec/nhplus/utils/SetUpDB.java	(date 1750145162781)
@@ -4,8 +4,12 @@
 import de.hitec.nhplus.datastorage.DaoFactory;
 import de.hitec.nhplus.datastorage.PatientDao;
 import de.hitec.nhplus.datastorage.TreatmentDao;
+import de.hitec.nhplus.datastorage.CaregiverDao;
+
 import de.hitec.nhplus.model.Patient;
 import de.hitec.nhplus.model.Treatment;
+import de.hitec.nhplus.model.Caregiver;
+
 import org.mindrot.jbcrypt.BCrypt;
 
 import java.sql.Connection;
Index: src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.hitec.nhplus.controller;\n\nimport de.hitec.nhplus.Main;\nimport de.hitec.nhplus.datastorage.CaregiverDao;\nimport de.hitec.nhplus.datastorage.DaoFactory;\nimport de.hitec.nhplus.datastorage.PatientDao;\nimport de.hitec.nhplus.datastorage.TreatmentDao;\nimport de.hitec.nhplus.model.Caregiver;\nimport de.hitec.nhplus.model.Patient;\nimport de.hitec.nhplus.model.Treatment;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.layout.AnchorPane;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\n\n/**\n * The <code>AllTreatmentController</code> manages the logic of the treatment view.\n * It handles displaying, filtering, adding, editing, and deleting treatments.\n */\npublic class AllTreatmentController {\n\n    @FXML\n    private TableView<Treatment> tableView;\n\n    @FXML\n    private TableColumn<Treatment, Integer> columnId;\n\n    @FXML\n    private TableColumn<Treatment, Integer> columnPid;\n\n    @FXML\n    private TableColumn<Treatment, String> columnDate;\n\n    @FXML\n    private TableColumn<Treatment, String> columnBegin;\n\n    @FXML\n    private TableColumn<Treatment, String> columnEnd;\n\n    @FXML\n    private TableColumn<Treatment, String> columnDescription;\n\n    @FXML\n    private TableColumn<Treatment, String> columnCaregiverSurname;\n\n    @FXML\n    private TableColumn<Treatment, String> columnCaregiverFirstname;\n\n    @FXML\n    private TableColumn<Treatment, String> columnCaregiverPhonenumber;\n\n    @FXML\n    private ComboBox<String> comboBoxCaregiverSelection;\n\n    @FXML\n    private ComboBox<String> comboBoxPatientSelection;\n\n    @FXML\n    private Button buttonDelete;\n\n    private final ObservableList<Treatment> treatments = FXCollections.observableArrayList();\n    private TreatmentDao dao;\n    private final ObservableList<String> patientSelection = FXCollections.observableArrayList();\n    private final ObservableList<String> caregiverSelection = FXCollections.observableArrayList();\n    private ArrayList<Patient> patientList;\n    private ArrayList<Caregiver> caregiverList;\n\n    /**\n     * Initializes the controller. Loads all treatments and configures UI components.\n     */\n    public void initialize() {\n        readAllAndShowInTableView();\n        comboBoxPatientSelection.setItems(patientSelection);\n        comboBoxPatientSelection.getSelectionModel().select(0);\n\n        comboBoxCaregiverSelection.setItems(caregiverSelection);\n        comboBoxCaregiverSelection.getSelectionModel().select(0);\n\n        this.columnId.setCellValueFactory(new PropertyValueFactory<>(\"tid\"));\n        this.columnPid.setCellValueFactory(new PropertyValueFactory<>(\"pid\"));\n        this.columnDate.setCellValueFactory(new PropertyValueFactory<>(\"date\"));\n        this.columnBegin.setCellValueFactory(new PropertyValueFactory<>(\"begin\"));\n        this.columnEnd.setCellValueFactory(new PropertyValueFactory<>(\"end\"));\n        this.columnDescription.setCellValueFactory(new PropertyValueFactory<>(\"description\"));\n        this.columnCaregiverSurname.setCellValueFactory(new PropertyValueFactory<>(\"caregiverSurname\"));\n        this.columnCaregiverFirstname.setCellValueFactory(new PropertyValueFactory<>(\"caregiverFirstname\"));\n        this.columnCaregiverPhonenumber.setCellValueFactory(new PropertyValueFactory<>(\"caregiverPhonenumber\"));\n        this.tableView.setItems(this.treatments);\n        this.buttonDelete.setDisable(true);\n        this.tableView.getSelectionModel().selectedItemProperty().addListener(\n                (observableValue, oldTreatment, newTreatment) ->\n                        AllTreatmentController.this.buttonDelete.setDisable(newTreatment == null));\n\n        this.createComboBoxPatientData();\n        this.createComboBoxCaregiverData();\n    }\n\n    /**\n     * Loads all treatments and displays them in the <code>TableView</code>.\n     */\n    public void readAllAndShowInTableView() {\n        comboBoxPatientSelection.getSelectionModel().select(0);\n        comboBoxCaregiverSelection.getSelectionModel().select(0);\n        this.dao = DaoFactory.getDaoFactory().createTreatmentDao();\n        try {\n            this.treatments.clear();\n            this.treatments.addAll(dao.readAll());\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    private void createComboBoxPatientData() {\n        patientSelection.clear();\n        this.patientSelection.add(\"alle\");\n\n    /**\n     * Fills the patient selection <code>ComboBox</code> with all available patients.\n     */\n    private void createComboBoxData() {\n        PatientDao dao = DaoFactory.getDaoFactory().createPatientDAO();\n        try {\n            patientList = (ArrayList<Patient>) dao.readAll();\n            for (Patient patient: patientList) {\n                this.patientSelection.add(patient.getSurname());\n            }\n            comboBoxPatientSelection.setItems(patientSelection);\n            comboBoxPatientSelection.getSelectionModel().selectFirst();\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    private void createComboBoxCaregiverData() {\n        caregiverSelection.clear();\n        caregiverSelection.add(\"alle\");\n\n        CaregiverDao dao = DaoFactory.getDaoFactory().createCaregiverDAO();\n        try {\n            caregiverList = (ArrayList<Caregiver>) dao.readAll();\n            for (Caregiver caregiver : caregiverList) {\n                if (caregiver.isActive()) {\n                    caregiverSelection.add(caregiver.getSurname());\n                }\n            }\n            comboBoxCaregiverSelection.setItems(caregiverSelection);\n            comboBoxCaregiverSelection.getSelectionModel().selectFirst();\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n\n    /**\n     * Handles selection changes in the <code>ComboBox</code> and filters treatments by patient.\n     */\n\n    @FXML\n    public void handleComboBox() {\n        String selectedPatient = this.comboBoxPatientSelection.getSelectionModel().getSelectedItem();\n        this.treatments.clear();\n        this.dao = DaoFactory.getDaoFactory().createTreatmentDao();\n\n        if (selectedPatient.equals(\"alle\")) {\n            try {\n                this.treatments.addAll(this.dao.readAll());\n            } catch (SQLException exception) {\n                exception.printStackTrace();\n            }\n        }\n\n        Patient patient = searchPatientInList(selectedPatient);\n        if (patient !=null) {\n            try {\n                this.treatments.addAll(this.dao.readTreatmentsByPid(patient.getPid()));\n            } catch (SQLException exception) {\n                exception.printStackTrace();\n            }\n        }\n    }\n\n    /**\n     * Searches for a patient in the internal list by surname.\n     *\n     * @param surname Surname of the patient.\n     * @return Matching patient or null if not found.\n     */\n    private Patient searchInList(String surname) {\n    private Patient searchPatientInList(String surname) {\n        for (Patient patient : this.patientList) {\n            if (patient.getSurname().equals(surname)) {\n\n                return patient;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Handles the event when the delete button is clicked.\n     * Deletes the selected treatment from database and removes it from the table.\n     */\n    private Caregiver searchCaregiverInList(String surname) {\n        for (Caregiver caregiver : this.caregiverList) {\n            if (caregiver.getSurname().equals(surname)) {\n                return caregiver;\n            }\n        }\n        return null;\n    }\n\n    @FXML\n    public void handleDelete() {\n        int index = this.tableView.getSelectionModel().getSelectedIndex();\n        Treatment t = this.treatments.remove(index);\n        TreatmentDao dao = DaoFactory.getDaoFactory().createTreatmentDao();\n        try {\n            dao.deleteById(t.getTid());\n        } catch (SQLException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    /**\n     * Opens the dialog to create a new treatment for the selected patient.\n     * If no patient is selected, an alert is shown.\n     */\n    @FXML\n    public void handleNewTreatment() {\n        try {\n            String selectedPatient = this.comboBoxPatientSelection.getSelectionModel().getSelectedItem();\n            Patient patient = searchPatientInList(selectedPatient);\n            String selectedCaregiver = this.comboBoxCaregiverSelection.getSelectionModel().getSelectedItem();\n            Caregiver caregiver = searchCaregiverInList(selectedCaregiver);\n\n            if (patient == null) {\n                throw new NullPointerException(\"Kein Patient ausgewählt\");\n            }\n\n            if (selectedCaregiver.equals(\"alle\")) {\n                throw new NullPointerException(\"Kein Pfleger ausgewählt\");\n            }\n\n            newTreatmentWindow(patient, caregiver);\n        } catch (NullPointerException exception) {\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\n            alert.setTitle(\"Information\");\n            if (exception.getMessage().equals(\"Kein Patient ausgewählt\")) {\n                alert.setHeaderText(\"Patient für die Behandlung fehlt!\");\n                alert.setContentText(\"Wählen Sie über die Combobox einen Patienten aus!\");\n            } else if (exception.getMessage().equals(\"Kein Pfleger ausgewählt\")) {\n                alert.setHeaderText(\"Kein Pfleger ausgewählt\");\n                alert.setContentText(\"Bitte wählen Sie einen konkreten Pfleger aus der Liste aus!\");\n            }\n            alert.showAndWait();\n        }\n    }\n\n    /**\n     * Handles double-clicks on a row in the <code>TableView</code> to open the treatment detail view.\n     */\n\n    @FXML\n    public void handleMouseClick() {\n        tableView.setOnMouseClicked(event -> {\n            if (event.getClickCount() == 2 && (tableView.getSelectionModel().getSelectedItem() != null)) {\n                int index = this.tableView.getSelectionModel().getSelectedIndex();\n                Treatment treatment = this.treatments.get(index);\n                treatmentWindow(treatment);\n            }\n        });\n    }\n\n    /**\n     * Opens the window to create a new treatment for a patient.\n     *\n     * @param patient The patient for whom the treatment is created.\n     */\n    public void newTreatmentWindow(Patient patient, Caregiver caregiver) {\n        try {\n            FXMLLoader loader = new FXMLLoader(Main.class.getResource(\"/de/hitec/nhplus/NewTreatmentView.fxml\"));\n            AnchorPane pane = loader.load();\n            Scene scene = new Scene(pane);\n\n            // the primary stage should stay in the background\n            Stage stage = new Stage();\n\n            NewTreatmentController controller = loader.getController();\n            controller.initialize(this, stage, patient, caregiver);\n\n            stage.setScene(scene);\n            stage.setResizable(false);\n            stage.showAndWait();\n        } catch (IOException exception) {\n            exception.printStackTrace();\n        }\n    }\n\n    /**\n     * Opens the window to view or edit a treatment.\n     *\n     * @param treatment The treatment to be shown.\n     */\n\n    public void treatmentWindow(Treatment treatment) {\n        try {\n            FXMLLoader loader = new FXMLLoader(Main.class.getResource(\"/de/hitec/nhplus/TreatmentView.fxml\"));\n            AnchorPane pane = loader.load();\n            Scene scene = new Scene(pane);\n\n            // the primary stage should stay in the background\n            Stage stage = new Stage();\n            TreatmentController controller = loader.getController();\n            controller.initializeController(this, stage, treatment);\n\n            stage.setScene(scene);\n            stage.setResizable(false);\n            stage.showAndWait();\n        } catch (IOException exception) {\n            exception.printStackTrace();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java b/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java
--- a/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java	(revision 3f7a8cb9677a662b8ceec3c94abfada588aa9fb9)
+++ b/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java	(date 1750145121000)
@@ -122,6 +122,7 @@
     private void createComboBoxPatientData() {
         patientSelection.clear();
         this.patientSelection.add("alle");
+    }
 
     /**
      * Fills the patient selection <code>ComboBox</code> with all available patients.
@@ -194,7 +195,6 @@
      * @param surname Surname of the patient.
      * @return Matching patient or null if not found.
      */
-    private Patient searchInList(String surname) {
     private Patient searchPatientInList(String surname) {
         for (Patient patient : this.patientList) {
             if (patient.getSurname().equals(surname)) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"a34ff0ce-7744-41f9-a83e-ef9c348ef1da\" name=\"Changes\" comment=\"feat: alle changes für diese User Story fertig\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/db/nursingHome.db\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/db/nursingHome.db\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/NewTreatmentController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/NewTreatmentController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/TreatmentController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/TreatmentController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/NewTreatmentView.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/NewTreatmentView.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/TreatmentView.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/TreatmentView.fxml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;JanFolkerts&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/JanFolkerts/NHPlus.git&quot;,\n    &quot;accountId&quot;: &quot;2457a6b2-ad10-4bcf-b00f-e580e5e7fadd&quot;\n  },\n  &quot;recentNewPullRequestHead&quot;: {\n    &quot;server&quot;: {\n      &quot;useHttp&quot;: false,\n      &quot;host&quot;: &quot;github.com&quot;,\n      &quot;port&quot;: null,\n      &quot;suffix&quot;: null\n    },\n    &quot;owner&quot;: &quot;JanFolkerts&quot;,\n    &quot;repository&quot;: &quot;NHPlus&quot;\n  }\n}</component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 4\n}</component>\n  <component name=\"ProjectId\" id=\"2cwPBBhwpAapfZ2CfHZwdL3mAXg\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;Application.SetUpDB.executor&quot;: &quot;Run&quot;,\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;pfleger__label&quot;,\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/sschw/laufender Unterricht/FA24C If/lf5_if_student&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.44712645&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;DatabaseDriversLRU&quot;: [\n      &quot;sqlite&quot;\n    ]\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\sschw\\laufender Unterricht\\NHPlus\\nhplus\\doc\" />\n      <recent name=\"C:\\Users\\T.Thiel\\Documents\\23\\FA23E\\LF05\\NHPlus\\NHPlus\\src\\main\\resources\\de\\hitec\\nhplus\" />\n      <recent name=\"C:\\Users\\T.Thiel\\Documents\\23\\FA23E\\LF05\\NHPlus\\NHPlus\\src\\main\\java\\de\\hitec\\nhplus\\controller\" />\n      <recent name=\"C:\\Users\\T.Thiel\\Documents\\23\\FA23E\\LF05\\NHPlus\\NHPlus\\src\\main\\java\\de\\hitec\\nhplus\\utils\" />\n      <recent name=\"C:\\Users\\T.Thiel\\Documents\\23\\FA23E\\LF05\\NHPlus\\NHPlus\\src\\main\\java\\de\\hitec\\nhplus\\model\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"de.hitec.nhplus.utils\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"de.hitec.nhplus.Main\" />\n      <module name=\"NHPlus\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"de.hitec.nhplus.controller.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"SetUpDB\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"de.hitec.nhplus.utils.SetUpDB\" />\n      <module name=\"NHPlus\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"de.hitec.nhplus.utils.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.SetUpDB\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.SetUpDB\" />\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.26053.27\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.26053.27\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"a34ff0ce-7744-41f9-a83e-ef9c348ef1da\" name=\"Changes\" comment=\"\" />\n      <created>1709019534076</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1709019534076</updated>\n      <workItem from=\"1709019535103\" duration=\"41658000\" />\n      <workItem from=\"1709631568050\" duration=\"764000\" />\n      <workItem from=\"1740484994368\" duration=\"239000\" />\n      <workItem from=\"1740485593473\" duration=\"2881000\" />\n      <workItem from=\"1743519415913\" duration=\"5538000\" />\n      <workItem from=\"1743525139214\" duration=\"1223000\" />\n      <workItem from=\"1743526797009\" duration=\"83000\" />\n      <workItem from=\"1743526923857\" duration=\"2891000\" />\n      <workItem from=\"1743531464575\" duration=\"33000\" />\n      <workItem from=\"1743667721637\" duration=\"357000\" />\n      <workItem from=\"1749541681879\" duration=\"1443000\" />\n      <workItem from=\"1749545138242\" duration=\"323000\" />\n      <workItem from=\"1749811572626\" duration=\"581000\" />\n      <workItem from=\"1749812161346\" duration=\"3335000\" />\n      <workItem from=\"1749816150584\" duration=\"21491000\" />\n      <workItem from=\"1750071331246\" duration=\"4113000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Readme aktualisiert, Klassendiagramm hinzugefügt, JavaFX IB, Schriftarten aktualisiert\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743526210484</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743526210484</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Readme aktualisiert, Klassendiagramm hinzugefügt, JavaFX IB, Schriftarten aktualisiert\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743527004876</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743527004876</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"feat: Caregiver details are now editable, surname, firstname and phonenumber&#10;feat: all textfields need to be filled for the button to be clickable\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749545454456</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749545454456</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Pushen von Armins changes Login\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749811556619</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749811556619</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Pushen von Armins changes Login\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749848042337</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749848042337</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Pushen von Armins changes Login\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749935808251</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749935808251</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Pushen von Armins changes Login\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750065978403</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750065978403</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"feat: alle changes für diese User Story fertig\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750067693752</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750067693752</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"9\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$PROJECT_DIR$\" />\n    </ignored-roots>\n    <MESSAGE value=\"Readme aktualisiert, Klassendiagramm hinzugefügt, JavaFX IB, Schriftarten aktualisiert\" />\n    <MESSAGE value=\"feat: Caregiver details are now editable, surname, firstname and phonenumber&#10;feat: all textfields need to be filled for the button to be clickable\" />\n    <MESSAGE value=\"Pushen von Armins changes Login\" />\n    <MESSAGE value=\"feat: alle changes für diese User Story fertig\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat: alle changes für diese User Story fertig\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3f7a8cb9677a662b8ceec3c94abfada588aa9fb9)
+++ b/.idea/workspace.xml	(date 1750145167895)
@@ -5,13 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="a34ff0ce-7744-41f9-a83e-ef9c348ef1da" name="Changes" comment="feat: alle changes für diese User Story fertig">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/db/nursingHome.db" beforeDir="false" afterPath="$PROJECT_DIR$/db/nursingHome.db" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/AllTreatmentController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/NewTreatmentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/NewTreatmentController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/TreatmentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/de/hitec/nhplus/controller/TreatmentController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/NewTreatmentView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/NewTreatmentView.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/TreatmentView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/de/hitec/nhplus/TreatmentView.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -28,7 +22,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="main" />
+        <entry key="$PROJECT_DIR$" value="Dokus" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -77,41 +71,41 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;Application.SetUpDB.executor&quot;: &quot;Run&quot;,
-    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;pfleger__label&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/sschw/laufender Unterricht/FA24C If/lf5_if_student&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.44712645&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.HelloApplication.executor": "Run",
+    "Application.Main.executor": "Run",
+    "Application.SetUpDB.executor": "Run",
+    "Downloaded.Files.Path.Enabled": "false",
+    "Repository.Attach.Annotations": "false",
+    "Repository.Attach.JavaDocs": "false",
+    "Repository.Attach.Sources": "false",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "Doku__Und__Tests",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/sschw/laufender Unterricht/FA24C If/lf5_if_student",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Project",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.44712645",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
   },
-  &quot;keyToStringList&quot;: {
-    &quot;DatabaseDriversLRU&quot;: [
-      &quot;sqlite&quot;
+  "keyToStringList": {
+    "DatabaseDriversLRU": [
+      "sqlite"
     ]
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\sschw\laufender Unterricht\NHPlus\nhplus\doc" />
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"dataSourceStorageLocal\" created-in=\"IU-232.10300.40\">\n    <data-source name=\"nursingHome.db\" uuid=\"5a5b8be1-080b-4129-b89d-42f1ea832b90\">\n      <database-info product=\"SQLite\" version=\"3.45.1\" jdbc-version=\"4.2\" driver-name=\"SQLite JDBC\" driver-version=\"3.45.1.0\" dbms=\"SQLITE\" exact-version=\"3.45.1\" exact-driver-version=\"3.45\">\n        <identifier-quote-string>&quot;</identifier-quote-string>\n      </database-info>\n      <case-sensitivity plain-identifiers=\"mixed\" quoted-identifiers=\"mixed\" />\n      <secret-storage>master_key</secret-storage>\n      <auth-provider>no-auth</auth-provider>\n      <schema-mapping>\n        <introspection-scope>\n          <node kind=\"schema\" negative=\"1\" />\n        </introspection-scope>\n      </schema-mapping>\n    </data-source>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	(revision 3f7a8cb9677a662b8ceec3c94abfada588aa9fb9)
+++ b/.idea/dataSources.local.xml	(date 1750145121066)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="IU-232.10300.40">
+  <component name="dataSourceStorageLocal" created-in="IU-243.26053.27">
     <data-source name="nursingHome.db" uuid="5a5b8be1-080b-4129-b89d-42f1ea832b90">
       <database-info product="SQLite" version="3.45.1" jdbc-version="4.2" driver-name="SQLite JDBC" driver-version="3.45.1.0" dbms="SQLITE" exact-version="3.45.1" exact-driver-version="3.45">
         <identifier-quote-string>&quot;</identifier-quote-string>
